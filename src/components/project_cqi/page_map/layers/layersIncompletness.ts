import { cleanupMapboxLayerJson } from '../../../BaseMap/utils/cleanupMapboxLayerJson'

export const layersIncompletness = [
  cleanupMapboxLayerJson('incomp_casing', [
    {
      layout: {
        'line-cap': 'round',
        'line-sort-key': [
          'case',
          ['match', ['get', 'proc_mandatory'], ['use_sidepath', 'optional_sidepath'], true, false],
          0,
          [
            'match',
            ['get', 'way_type'],
            ['bicycle road', 'shared bus lane', 'shared traffic lane', 'shared road'],
            true,
            false,
          ],
          2,
          1,
        ],
        visibility: 'none',
      },
      type: 'line',
      source: 'composite',
      id: 'incomp_casing',
      paint: {
        'line-width': ['interpolate', ['linear'], ['zoom'], 0, 1.4, 10, 1.4, 22, 16],
        'line-offset': [
          'interpolate',
          ['linear'],
          ['zoom'],
          0,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          10,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          22,
          ['match', ['get', 'side'], ['right'], 12, ['left'], -12, 0],
        ],
        'line-color': [
          'match',
          ['get', 'way_type'],
          [
            'shared path',
            'crossing',
            'shared footway',
            'cycle lane (protected)',
            'cycle track',
            'segregated path',
            'link',
            'cycle path',
            'track or service',
          ],
          'rgb(125, 125, 125)',
          'rgb(0, 0, 0)',
        ],
      },
      'source-layer': 'cycling_quality_index_epsg432-9mobr8',
    },
  ]),
  cleanupMapboxLayerJson('incomp_gap_background', [
    {
      layout: {
        'line-cap': 'round',
        visibility: 'none',
      },
      type: 'line',
      source: 'composite',
      id: 'incomp_gap_background',
      paint: {
        'line-width': ['interpolate', ['linear'], ['zoom'], 0, 1, 10, 1, 22, 12],
        'line-offset': [
          'interpolate',
          ['linear'],
          ['zoom'],
          0,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          10,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          22,
          ['match', ['get', 'side'], ['right'], 12, ['left'], -12, 0],
        ],
        'line-color': [
          'interpolate',
          ['linear'],
          ['get', 'data_incompleteness'],
          0,
          '#fafafa',
          10,
          '#dfdfdf',
          20,
          '#c4c4c4',
          30,
          '#a8a8a8',
          40,
          '#8d8d8d',
          50,
          '#727272',
          60,
          '#575757',
          70,
          '#3b3b3b',
          80,
          '#202020',
          90,
          '#000000',
        ],
      },
      'source-layer': 'cycling_quality_index_epsg432-9mobr8',
    },
  ]),
  cleanupMapboxLayerJson('incomp_main_colour', [
    {
      layout: {
        'line-sort-key': [
          'step',
          ['get', 'index'],
          3,
          10,
          10,
          20,
          20,
          30,
          30,
          40,
          40,
          50,
          50,
          60,
          60,
          70,
          70,
          80,
          80,
          90,
          90,
        ],
        visibility: 'none',
      },
      type: 'line',
      source: 'composite',
      id: 'incomp_main_colour',
      paint: {
        'line-color': [
          'interpolate',
          ['linear'],
          ['get', 'data_incompleteness'],
          0,
          '#fafafa',
          10,
          '#dfdfdf',
          20,
          '#c4c4c4',
          30,
          '#a8a8a8',
          40,
          '#8d8d8d',
          50,
          '#727272',
          60,
          '#575757',
          70,
          '#3b3b3b',
          80,
          '#202020',
          90,
          '#000000',
        ],
        'line-width': ['interpolate', ['linear'], ['zoom'], 0, 1, 10, 1, 22, 12],
        'line-offset': [
          'interpolate',
          ['linear'],
          ['zoom'],
          0,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          10,
          ['match', ['get', 'side'], ['right'], 1, ['left'], -1, 0],
          22,
          ['match', ['get', 'side'], ['right'], 12, ['left'], -12, 0],
        ],
      },
      'source-layer': 'cycling_quality_index_epsg432-9mobr8',
    },
  ]),
]

export const legendIncompletness = [
  {
    color: '#fafafa',
    label: 'Vollständig',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 0 },
  },
  {
    color: '#dfdfdf',
    label: 'Einige Daten fehlen',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 10 },
  },
  {
    color: '#c4c4c4',
    label: 'Einige Daten fehlen',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 20 },
  },
  {
    color: '#a8a8a8',
    label: 'Einige Daten fehlen',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 30 },
  },
  {
    color: '#8d8d8d',
    label: 'Einige Daten fehlen',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 40 },
  },
  {
    color: '#727272',
    label: 'Einige Daten fehlen',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 50 },
  },
  {
    color: '#575757',
    label: 'Einige Daten fehlen',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 60 },
  },
  {
    color: '#3b3b3b',
    label: 'Einige Daten fehlen',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 70 },
  },
  {
    color: '#202020',
    label: 'Unvollständig',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 80 },
  },
  {
    color: '#000000',
    label: 'Sehr unvollständig',
    filterConfig: { key: 'data_incompleteness', rule: '==', value: 90 },
  },
]
