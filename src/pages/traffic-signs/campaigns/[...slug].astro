---
export const prerender = true

import { maprouletteChallengeUrl } from '@components/campaigns/maprouletteChallengeUrl'
import MegaButton from '@components/Link/MegaButton.astro'
import LayoutArticlePost from '@layouts/LayoutArticlePost.astro'
import { type CollectionEntry, getCollection } from 'astro:content'

export async function getStaticPaths() {
  const project = 'traffic-signs' // REMINDER: this needs to be change for each project and added to `src/projectsConfig.const.ts`
  const campaigns = await getCollection('campaigns')
  return campaigns
    .filter((campaign) => campaign.data.project === project)
    .map((campaign) => ({
      params: { slug: campaign.id.replace('/index', '') },
      props: campaign,
    }))
}
type Props = CollectionEntry<'campaigns'>

const page = Astro.props
// TODO, see https://github.com/Thinkmill/keystatic/discussions/1318
// const { Content } = await render(page)

const url = maprouletteChallengeUrl(page.data.maprouletteChallenge.id)
---

<LayoutArticlePost
  title={page.data.name}
  {...page.data}
  noindex={!url || !page.data.maprouletteChallenge.enabled}
>
  <MegaButton
    href={url || '#wip'}
    iconKey="maproulette"
    label={url ? 'Mitmachen' : 'MapRoulette Challenge noch nicht verfügbar'}
    subline="Zur MapRoulette Challenge"
  />

  <div class="my-10">
    <!-- <Content components={mdxComponentsAstro} /> -->
  </div>

  <div class="mt-6 border-t border-gray-100">
    <dl class="divide-y divide-gray-100">
      <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
        <dt class="m-0 text-sm font-medium leading-6 text-gray-900">Name der Kampagne</dt>
        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
          {page.data.maprouletteChallenge.name}
        </dd>
      </div>
      <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
        <dt class="m-0 text-sm font-medium leading-6 text-gray-900">Quelle</dt>
        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
          <a href={page.data.maprouletteChallenge.remoteGeoJson} target="_blank">GeoJson</a>
          {
            page.data.maprouletteChallenge.remoteGeoJson.includes('radverkehrsatlas') ? (
              <div>
                Diese Kampagne basiert auf Prozessierung im Projekt{' '}
                <a target="_blank" href="https://radverkehrsatlas.de">
                  radverkehrsatlas.de
                </a>
                .{' '}
                <a
                  target="_blank"
                  href="https://github.com/FixMyBerlin/atlas-app/blob/develop/processing/topics/roads_bikelanes/bikelanes/BikelaneTodos.lua"
                >
                  Der Quellcode ist auf Github
                </a>
                .
              </div>
            ) : null
          }
        </dd>
      </div>
      <div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
        <dt class="m-0 text-sm font-medium leading-6 text-gray-900">
          <span style="color:#448ee4">OSM</span>Cha
        </dt>
        <dd class="mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0">
          <a
            href={`https://osmcha.org/?filters={"date__gte":[{"label":"2024-09-01","value":"2024-09-01"}],"source":[{"label":"${page.data.maprouletteChallenge.checkinSource}","value":"${page.data.maprouletteChallenge.checkinSource}"}]}`}
            target="_blank"
          >
            Changesets dieser Kampagne mit der Quelle
            <code>{page.data.maprouletteChallenge.checkinSource}</code>
            in OSMCha öffnen
          </a>
        </dd>
      </div>
    </dl>
  </div>
</LayoutArticlePost>
